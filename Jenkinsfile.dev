
pipeline {

  podTemplate(label: label, containers: [
    containerTemplate(name: 'maven', image: 'maven:3.3.9-jdk-8-alpine', ttyEnabled: true, command: 'cat'),
   // containerTemplate(name: 'golang', image: 'golang:1.8.0', ttyEnabled: true, command: 'cat')
  ]
  /*
  agent {
    kubernetes {
    label "aa-${UUID.randomUUID().toString()}"
    yamlFile 'Jenkinsfile.kubernetes.dev.yaml'
    }
  }
*/
  environment {
    IMAGE_NAME = 'base'
    GC_REGISTRY_HOSTNAME = 'gcr.io'
    GC_PROJECT_ID_DEV = 'bc-te-dlake-dev-s7b3'
    }
  stages {
    stage('CHECKOUT') {
      steps {
        dir("${env.work}") {
          deleteDir()
          checkout scm
        }
      }
    }
      
    stage('Build Docker Image Base') {
      steps {
        container('maven'){
          script {
            dir("${env.work}"){
              sh "docker ps"
            }
          }
        }
      }
    }
    
  }
  post {
    always {
      dir("${env.work}"){
        cleanWs()
      }
    }
  }
}
